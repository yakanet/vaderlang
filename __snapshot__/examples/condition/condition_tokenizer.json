[
  {
    "type": "Decorator",
    "value": "intrinsic",
    "location": {
      "start": 1,
      "end": 10,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "Identifier",
    "value": "print",
    "location": {
      "start": 11,
      "end": 16,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "ColonToken",
    "value": ":",
    "location": {
      "start": 17,
      "end": 18,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "ColonToken",
    "value": ":",
    "location": {
      "start": 18,
      "end": 19,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "Keyword",
    "value": "fn",
    "location": {
      "start": 20,
      "end": 22,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "OpenRoundBracket",
    "value": "(",
    "location": {
      "start": 22,
      "end": 23,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "Identifier",
    "value": "message",
    "location": {
      "start": 23,
      "end": 30,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "ColonToken",
    "value": ":",
    "location": {
      "start": 30,
      "end": 31,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "Identifier",
    "value": "string",
    "location": {
      "start": 32,
      "end": 38,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "CloseRoundBracket",
    "value": ")",
    "location": {
      "start": 38,
      "end": 39,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "LambdaArrowToken",
    "value": "->",
    "location": {
      "start": 40,
      "end": 42,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "Identifier",
    "value": "void",
    "location": {
      "start": 43,
      "end": 47,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "Identifier",
    "value": "main",
    "location": {
      "start": 49,
      "end": 53,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "ColonToken",
    "value": ":",
    "location": {
      "start": 54,
      "end": 55,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "ColonToken",
    "value": ":",
    "location": {
      "start": 55,
      "end": 56,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "Keyword",
    "value": "fn",
    "location": {
      "start": 57,
      "end": 59,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "OpenRoundBracket",
    "value": "(",
    "location": {
      "start": 59,
      "end": 60,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "CloseRoundBracket",
    "value": ")",
    "location": {
      "start": 60,
      "end": 61,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "LambdaArrowToken",
    "value": "->",
    "location": {
      "start": 62,
      "end": 64,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "Identifier",
    "value": "u32",
    "location": {
      "start": 65,
      "end": 68,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "OpenCurlyBracket",
    "value": "{",
    "location": {
      "start": 69,
      "end": 70,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "Identifier",
    "value": "x",
    "location": {
      "start": 75,
      "end": 76,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "ColonToken",
    "value": ":",
    "location": {
      "start": 77,
      "end": 78,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "ColonToken",
    "value": ":",
    "location": {
      "start": 78,
      "end": 79,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "NumberToken",
    "value": "32",
    "location": {
      "end": 82,
      "start": 80,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "Keyword",
    "value": "if",
    "location": {
      "start": 114,
      "end": 116,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "Identifier",
    "value": "x",
    "location": {
      "start": 117,
      "end": 118,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "DoubleEqualToken",
    "value": "==",
    "location": {
      "start": 119,
      "end": 121,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "NumberToken",
    "value": "32",
    "location": {
      "end": 124,
      "start": 122,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "OpenCurlyBracket",
    "value": "{",
    "location": {
      "start": 125,
      "end": 126,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "Identifier",
    "value": "print",
    "location": {
      "start": 135,
      "end": 140,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "OpenRoundBracket",
    "value": "(",
    "location": {
      "start": 140,
      "end": 141,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "StringLiteral",
    "value": "equals\\n",
    "location": {
      "start": 141,
      "end": 151,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "CloseRoundBracket",
    "value": ")",
    "location": {
      "start": 151,
      "end": 152,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "CloseCurlyBracket",
    "value": "}",
    "location": {
      "start": 157,
      "end": 158,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "Keyword",
    "value": "if",
    "location": {
      "start": 208,
      "end": 210,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "OpenRoundBracket",
    "value": "(",
    "location": {
      "start": 211,
      "end": 212,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "Identifier",
    "value": "x",
    "location": {
      "start": 212,
      "end": 213,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "DoubleEqualToken",
    "value": "==",
    "location": {
      "start": 214,
      "end": 216,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "NumberToken",
    "value": "32",
    "location": {
      "end": 219,
      "start": 217,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "CloseRoundBracket",
    "value": ")",
    "location": {
      "start": 219,
      "end": 220,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "OpenCurlyBracket",
    "value": "{",
    "location": {
      "start": 221,
      "end": 222,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "Identifier",
    "value": "print",
    "location": {
      "start": 231,
      "end": 236,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "OpenRoundBracket",
    "value": "(",
    "location": {
      "start": 236,
      "end": 237,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "StringLiteral",
    "value": "second equals\\n",
    "location": {
      "start": 237,
      "end": 254,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "CloseRoundBracket",
    "value": ")",
    "location": {
      "start": 254,
      "end": 255,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "CloseCurlyBracket",
    "value": "}",
    "location": {
      "start": 260,
      "end": 261,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "Keyword",
    "value": "if",
    "location": {
      "start": 293,
      "end": 295,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "Identifier",
    "value": "x",
    "location": {
      "start": 296,
      "end": 297,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "BangEqualToken",
    "value": "!=",
    "location": {
      "start": 298,
      "end": 300,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "NumberToken",
    "value": "32",
    "location": {
      "end": 303,
      "start": 301,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "OpenCurlyBracket",
    "value": "{",
    "location": {
      "start": 304,
      "end": 305,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "Identifier",
    "value": "print",
    "location": {
      "start": 314,
      "end": 319,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "OpenRoundBracket",
    "value": "(",
    "location": {
      "start": 319,
      "end": 320,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "StringLiteral",
    "value": "equals\\n",
    "location": {
      "start": 320,
      "end": 330,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "CloseRoundBracket",
    "value": ")",
    "location": {
      "start": 330,
      "end": 331,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "CloseCurlyBracket",
    "value": "}",
    "location": {
      "start": 336,
      "end": 337,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "Keyword",
    "value": "else",
    "location": {
      "start": 338,
      "end": 342,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "OpenCurlyBracket",
    "value": "{",
    "location": {
      "start": 343,
      "end": 344,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "Identifier",
    "value": "print",
    "location": {
      "start": 353,
      "end": 358,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "OpenRoundBracket",
    "value": "(",
    "location": {
      "start": 358,
      "end": 359,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "StringLiteral",
    "value": "not equals\\n",
    "location": {
      "start": 359,
      "end": 373,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "CloseRoundBracket",
    "value": ")",
    "location": {
      "start": 373,
      "end": 374,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "CloseCurlyBracket",
    "value": "}",
    "location": {
      "start": 379,
      "end": 380,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "Keyword",
    "value": "if",
    "location": {
      "start": 422,
      "end": 424,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "Identifier",
    "value": "x",
    "location": {
      "start": 425,
      "end": 426,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "DoubleEqualToken",
    "value": "==",
    "location": {
      "start": 427,
      "end": 429,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "NumberToken",
    "value": "0",
    "location": {
      "end": 431,
      "start": 430,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "OpenCurlyBracket",
    "value": "{",
    "location": {
      "start": 432,
      "end": 433,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "Identifier",
    "value": "print",
    "location": {
      "start": 442,
      "end": 447,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "OpenRoundBracket",
    "value": "(",
    "location": {
      "start": 447,
      "end": 448,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "StringLiteral",
    "value": "x == 0\\n",
    "location": {
      "start": 448,
      "end": 458,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "CloseRoundBracket",
    "value": ")",
    "location": {
      "start": 458,
      "end": 459,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "CloseCurlyBracket",
    "value": "}",
    "location": {
      "start": 464,
      "end": 465,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "Keyword",
    "value": "elif",
    "location": {
      "start": 466,
      "end": 470,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "Identifier",
    "value": "x",
    "location": {
      "start": 471,
      "end": 472,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "DoubleEqualToken",
    "value": "==",
    "location": {
      "start": 473,
      "end": 475,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "NumberToken",
    "value": "32",
    "location": {
      "end": 478,
      "start": 476,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "OpenCurlyBracket",
    "value": "{",
    "location": {
      "start": 479,
      "end": 480,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "Identifier",
    "value": "print",
    "location": {
      "start": 489,
      "end": 494,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "OpenRoundBracket",
    "value": "(",
    "location": {
      "start": 494,
      "end": 495,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "StringLiteral",
    "value": "x == 32\\n",
    "location": {
      "start": 495,
      "end": 506,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "CloseRoundBracket",
    "value": ")",
    "location": {
      "start": 506,
      "end": 507,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "CloseCurlyBracket",
    "value": "}",
    "location": {
      "start": 512,
      "end": 513,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "Keyword",
    "value": "elif",
    "location": {
      "start": 514,
      "end": 518,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "Identifier",
    "value": "x",
    "location": {
      "start": 519,
      "end": 520,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "DoubleEqualToken",
    "value": "==",
    "location": {
      "start": 521,
      "end": 523,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "NumberToken",
    "value": "30",
    "location": {
      "end": 526,
      "start": 524,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "OpenCurlyBracket",
    "value": "{",
    "location": {
      "start": 527,
      "end": 528,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "Identifier",
    "value": "print",
    "location": {
      "start": 537,
      "end": 542,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "OpenRoundBracket",
    "value": "(",
    "location": {
      "start": 542,
      "end": 543,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "StringLiteral",
    "value": "x == 30\\n",
    "location": {
      "start": 543,
      "end": 554,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "CloseRoundBracket",
    "value": ")",
    "location": {
      "start": 554,
      "end": 555,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "CloseCurlyBracket",
    "value": "}",
    "location": {
      "start": 560,
      "end": 561,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "Keyword",
    "value": "else",
    "location": {
      "start": 562,
      "end": 566,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "OpenCurlyBracket",
    "value": "{",
    "location": {
      "start": 567,
      "end": 568,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "Identifier",
    "value": "print",
    "location": {
      "start": 577,
      "end": 582,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "OpenRoundBracket",
    "value": "(",
    "location": {
      "start": 582,
      "end": 583,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "StringLiteral",
    "value": "not equals\\n",
    "location": {
      "start": 583,
      "end": 597,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "CloseRoundBracket",
    "value": ")",
    "location": {
      "start": 597,
      "end": 598,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "CloseCurlyBracket",
    "value": "}",
    "location": {
      "start": 603,
      "end": 604,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "Identifier",
    "value": "z",
    "location": {
      "start": 609,
      "end": 610,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "ColonToken",
    "value": ":",
    "location": {
      "start": 611,
      "end": 612,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "EqualToken",
    "value": "=",
    "location": {
      "start": 612,
      "end": 613,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "NumberToken",
    "value": "3",
    "location": {
      "end": 615,
      "start": 614,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "Identifier",
    "value": "y",
    "location": {
      "start": 620,
      "end": 621,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "ColonToken",
    "value": ":",
    "location": {
      "start": 622,
      "end": 623,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "EqualToken",
    "value": "=",
    "location": {
      "start": 623,
      "end": 624,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "Keyword",
    "value": "if",
    "location": {
      "start": 625,
      "end": 627,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "Identifier",
    "value": "x",
    "location": {
      "start": 628,
      "end": 629,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "DoubleEqualToken",
    "value": "==",
    "location": {
      "start": 630,
      "end": 632,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "NumberToken",
    "value": "32",
    "location": {
      "end": 635,
      "start": 633,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "OpenCurlyBracket",
    "value": "{",
    "location": {
      "start": 636,
      "end": 637,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "Identifier",
    "value": "z",
    "location": {
      "start": 646,
      "end": 647,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "EqualToken",
    "value": "=",
    "location": {
      "start": 648,
      "end": 649,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "NumberToken",
    "value": "2",
    "location": {
      "end": 651,
      "start": 650,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "NumberToken",
    "value": "1",
    "location": {
      "end": 661,
      "start": 660,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "CloseCurlyBracket",
    "value": "}",
    "location": {
      "start": 666,
      "end": 667,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "Keyword",
    "value": "elif",
    "location": {
      "start": 672,
      "end": 676,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "Identifier",
    "value": "x",
    "location": {
      "start": 677,
      "end": 678,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "DoubleEqualToken",
    "value": "==",
    "location": {
      "start": 679,
      "end": 681,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "NumberToken",
    "value": "33",
    "location": {
      "end": 684,
      "start": 682,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "OpenCurlyBracket",
    "value": "{",
    "location": {
      "start": 685,
      "end": 686,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "NumberToken",
    "value": "3",
    "location": {
      "end": 688,
      "start": 687,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "CloseCurlyBracket",
    "value": "}",
    "location": {
      "start": 689,
      "end": 690,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "Keyword",
    "value": "else",
    "location": {
      "start": 695,
      "end": 699,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "OpenCurlyBracket",
    "value": "{",
    "location": {
      "start": 700,
      "end": 701,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "NumberToken",
    "value": "2",
    "location": {
      "end": 703,
      "start": 702,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "CloseCurlyBracket",
    "value": "}",
    "location": {
      "start": 704,
      "end": 705,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "Keyword",
    "value": "return",
    "location": {
      "start": 710,
      "end": 716,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "Identifier",
    "value": "x",
    "location": {
      "start": 717,
      "end": 718,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "PlusToken",
    "value": "+",
    "location": {
      "start": 719,
      "end": 720,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "Identifier",
    "value": "y",
    "location": {
      "start": 721,
      "end": 722,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "PlusToken",
    "value": "+",
    "location": {
      "start": 723,
      "end": 724,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "Identifier",
    "value": "z",
    "location": {
      "start": 725,
      "end": 726,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "CloseCurlyBracket",
    "value": "}",
    "location": {
      "start": 727,
      "end": 728,
      "file": "examples/condition.vader"
    }
  },
  {
    "type": "EOF",
    "location": {
      "start": 728,
      "end": 728,
      "file": "examples/condition.vader"
    },
    "value": "\u0000"
  }
]