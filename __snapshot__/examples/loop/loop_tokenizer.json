[
  {
    "type": "Decorator",
    "value": "load",
    "location": {
      "start": 1,
      "end": 5,
      "file": "examples/loop.vader"
    }
  },
  {
    "type": "StringLiteral",
    "value": "std",
    "location": {
      "start": 8,
      "end": 11,
      "file": "examples/loop.vader"
    }
  },
  {
    "type": "Identifier",
    "value": "main",
    "location": {
      "start": 13,
      "end": 17,
      "file": "examples/loop.vader"
    }
  },
  {
    "type": "ColonToken",
    "value": ":",
    "location": {
      "start": 18,
      "end": 19,
      "file": "examples/loop.vader"
    }
  },
  {
    "type": "ColonToken",
    "value": ":",
    "location": {
      "start": 19,
      "end": 20,
      "file": "examples/loop.vader"
    }
  },
  {
    "type": "Keyword",
    "value": "fn",
    "location": {
      "start": 21,
      "end": 23,
      "file": "examples/loop.vader"
    }
  },
  {
    "type": "OpenRoundBracket",
    "value": "(",
    "location": {
      "start": 23,
      "end": 24,
      "file": "examples/loop.vader"
    }
  },
  {
    "type": "CloseRoundBracket",
    "value": ")",
    "location": {
      "start": 24,
      "end": 25,
      "file": "examples/loop.vader"
    }
  },
  {
    "type": "OpenCurlyBracket",
    "value": "{",
    "location": {
      "start": 26,
      "end": 27,
      "file": "examples/loop.vader"
    }
  },
  {
    "type": "Keyword",
    "value": "for",
    "location": {
      "start": 32,
      "end": 35,
      "file": "examples/loop.vader"
    }
  },
  {
    "type": "Identifier",
    "value": "i",
    "location": {
      "start": 36,
      "end": 37,
      "file": "examples/loop.vader"
    }
  },
  {
    "type": "ColonToken",
    "value": ":",
    "location": {
      "start": 38,
      "end": 39,
      "file": "examples/loop.vader"
    }
  },
  {
    "type": "EqualToken",
    "value": "=",
    "location": {
      "start": 39,
      "end": 40,
      "file": "examples/loop.vader"
    }
  },
  {
    "type": "NumberToken",
    "value": "0",
    "location": {
      "end": 42,
      "start": 41,
      "file": "examples/loop.vader"
    }
  },
  {
    "type": "SemicolonToken",
    "value": ";",
    "location": {
      "start": 42,
      "end": 43,
      "file": "examples/loop.vader"
    }
  },
  {
    "type": "Identifier",
    "value": "i",
    "location": {
      "start": 44,
      "end": 45,
      "file": "examples/loop.vader"
    }
  },
  {
    "type": "LowerThanToken",
    "value": "<",
    "location": {
      "start": 46,
      "end": 47,
      "file": "examples/loop.vader"
    }
  },
  {
    "type": "NumberToken",
    "value": "10",
    "location": {
      "end": 50,
      "start": 48,
      "file": "examples/loop.vader"
    }
  },
  {
    "type": "SemicolonToken",
    "value": ";",
    "location": {
      "start": 50,
      "end": 51,
      "file": "examples/loop.vader"
    }
  },
  {
    "type": "Identifier",
    "value": "i",
    "location": {
      "start": 52,
      "end": 53,
      "file": "examples/loop.vader"
    }
  },
  {
    "type": "EqualToken",
    "value": "=",
    "location": {
      "start": 54,
      "end": 55,
      "file": "examples/loop.vader"
    }
  },
  {
    "type": "Identifier",
    "value": "i",
    "location": {
      "start": 56,
      "end": 57,
      "file": "examples/loop.vader"
    }
  },
  {
    "type": "PlusToken",
    "value": "+",
    "location": {
      "start": 58,
      "end": 59,
      "file": "examples/loop.vader"
    }
  },
  {
    "type": "NumberToken",
    "value": "1",
    "location": {
      "end": 61,
      "start": 60,
      "file": "examples/loop.vader"
    }
  },
  {
    "type": "OpenCurlyBracket",
    "value": "{",
    "location": {
      "start": 62,
      "end": 63,
      "file": "examples/loop.vader"
    }
  },
  {
    "type": "Keyword",
    "value": "for",
    "location": {
      "start": 72,
      "end": 75,
      "file": "examples/loop.vader"
    }
  },
  {
    "type": "OpenRoundBracket",
    "value": "(",
    "location": {
      "start": 75,
      "end": 76,
      "file": "examples/loop.vader"
    }
  },
  {
    "type": "Identifier",
    "value": "j",
    "location": {
      "start": 76,
      "end": 77,
      "file": "examples/loop.vader"
    }
  },
  {
    "type": "ColonToken",
    "value": ":",
    "location": {
      "start": 78,
      "end": 79,
      "file": "examples/loop.vader"
    }
  },
  {
    "type": "EqualToken",
    "value": "=",
    "location": {
      "start": 79,
      "end": 80,
      "file": "examples/loop.vader"
    }
  },
  {
    "type": "NumberToken",
    "value": "0",
    "location": {
      "end": 82,
      "start": 81,
      "file": "examples/loop.vader"
    }
  },
  {
    "type": "SemicolonToken",
    "value": ";",
    "location": {
      "start": 82,
      "end": 83,
      "file": "examples/loop.vader"
    }
  },
  {
    "type": "Identifier",
    "value": "j",
    "location": {
      "start": 84,
      "end": 85,
      "file": "examples/loop.vader"
    }
  },
  {
    "type": "LowerThanToken",
    "value": "<",
    "location": {
      "start": 86,
      "end": 87,
      "file": "examples/loop.vader"
    }
  },
  {
    "type": "NumberToken",
    "value": "10",
    "location": {
      "end": 90,
      "start": 88,
      "file": "examples/loop.vader"
    }
  },
  {
    "type": "SemicolonToken",
    "value": ";",
    "location": {
      "start": 90,
      "end": 91,
      "file": "examples/loop.vader"
    }
  },
  {
    "type": "Identifier",
    "value": "j",
    "location": {
      "start": 92,
      "end": 93,
      "file": "examples/loop.vader"
    }
  },
  {
    "type": "EqualToken",
    "value": "=",
    "location": {
      "start": 94,
      "end": 95,
      "file": "examples/loop.vader"
    }
  },
  {
    "type": "Identifier",
    "value": "j",
    "location": {
      "start": 96,
      "end": 97,
      "file": "examples/loop.vader"
    }
  },
  {
    "type": "PlusToken",
    "value": "+",
    "location": {
      "start": 98,
      "end": 99,
      "file": "examples/loop.vader"
    }
  },
  {
    "type": "NumberToken",
    "value": "1",
    "location": {
      "end": 101,
      "start": 100,
      "file": "examples/loop.vader"
    }
  },
  {
    "type": "CloseRoundBracket",
    "value": ")",
    "location": {
      "start": 101,
      "end": 102,
      "file": "examples/loop.vader"
    }
  },
  {
    "type": "OpenCurlyBracket",
    "value": "{",
    "location": {
      "start": 103,
      "end": 104,
      "file": "examples/loop.vader"
    }
  },
  {
    "type": "Identifier",
    "value": "print",
    "location": {
      "start": 117,
      "end": 122,
      "file": "examples/loop.vader"
    }
  },
  {
    "type": "OpenRoundBracket",
    "value": "(",
    "location": {
      "start": 122,
      "end": 123,
      "file": "examples/loop.vader"
    }
  },
  {
    "type": "StringLiteral",
    "value": "Hello",
    "location": {
      "start": 125,
      "end": 130,
      "file": "examples/loop.vader"
    }
  },
  {
    "type": "CloseRoundBracket",
    "value": ")",
    "location": {
      "start": 130,
      "end": 131,
      "file": "examples/loop.vader"
    }
  },
  {
    "type": "CloseCurlyBracket",
    "value": "}",
    "location": {
      "start": 140,
      "end": 141,
      "file": "examples/loop.vader"
    }
  },
  {
    "type": "Identifier",
    "value": "print",
    "location": {
      "start": 150,
      "end": 155,
      "file": "examples/loop.vader"
    }
  },
  {
    "type": "OpenRoundBracket",
    "value": "(",
    "location": {
      "start": 155,
      "end": 156,
      "file": "examples/loop.vader"
    }
  },
  {
    "type": "StringLiteral",
    "value": "\\n",
    "location": {
      "start": 158,
      "end": 160,
      "file": "examples/loop.vader"
    }
  },
  {
    "type": "CloseRoundBracket",
    "value": ")",
    "location": {
      "start": 160,
      "end": 161,
      "file": "examples/loop.vader"
    }
  },
  {
    "type": "CloseCurlyBracket",
    "value": "}",
    "location": {
      "start": 166,
      "end": 167,
      "file": "examples/loop.vader"
    }
  },
  {
    "type": "CloseCurlyBracket",
    "value": "}",
    "location": {
      "start": 168,
      "end": 169,
      "file": "examples/loop.vader"
    }
  },
  {
    "type": "EOF",
    "location": {
      "start": 169,
      "end": 169,
      "file": "examples/loop.vader"
    },
    "value": "\u0000"
  }
]